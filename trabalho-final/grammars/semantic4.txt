# Start global scope
PROGRAM -> FUNCLIST
 PROGRAM.scopes.push(ScopeType::ANY)
PROGRAM -> STATEMENT
 PROGRAM.scopes.push(ScopeType::ANY)

# Pop global scope
EOF
 EOF.scopes.pop()

FUNCDEF -> kw_def func_id lparenthesis PARAMLIST rparenthesis lbrace STATELIST rbrace
 STATELIST.scopes.push(ScopeType::Function)

IFSTAT -> kw_if lparenthesis EXPRESSION rparenthesis lbrace STATELIST rbrace ELSESTAT
 STATELIST.scopes.push(ScopeType::Any)

ELSESTAT_1 -> lbrace STATELIST rbrace
 STATELIST.scopes.push(ScopeType::Any)

FORSTAT -> kw_for lparenthesis ATRIBSTAT semicolon EXPRESSION semicolon ATRIBSTAT rparenthesis lbrace STATELIST rbrace
 STATELIST.scopes.push(ScopeType::Loop)

STATEMENT -> lbrace STATELIST rbrace
 STATELIST.scopes.push(ScopeType::Any)

# Whenever vising a "}" node, close the previous scope
rbrace
 rbrace.scopes.pop()