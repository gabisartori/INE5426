int matrixA[2][3];
int matrixB[3][2];
int result[2][2];

int rowsA;
int colsA;
int rowsB;
int colsB;

def @initializeMatrixA() {
    matrixA[0][0] = 1;
    matrixA[0][1] = 2;
    matrixA[0][2] = 3;
    matrixA[1][0] = 4;
    matrixA[1][1] = 5;
    matrixA[1][2] = 6;
    return;
}

def @initializeMatrixB() {
    matrixB[0][0] = 7;
    matrixB[0][1] = 8;
    matrixB[1][0] = 9;
    matrixB[1][1] = 10;
    matrixB[2][0] = 11;
    matrixB[2][1] = 12;
    return;
}

def @initializeResultMatrix() {
    int i;
    int j;
    for (i = 0; i < 2; i = i + 1) {
        for (j = 0; j < 2; j = j + 1) {
            result[i][j] = 0;
        }
    }
    return;
}

def @printMatrixA() {
    int i;
    int j;
    print 10;
    for (i = 0; i < 2; i = i + 1) {
        for (j = 0; j < 3; j = j + 1) {
            print matrixA[i][j];
        }
    }
    return;
}

def @printMatrixB() {
    int i;
    int j;
    print 20;
    for (i = 0; i < 3; i = i + 1) {
        for (j = 0; j < 2; j = j + 1) {
            print matrixB[i][j];
        }
    }
    return;
}

def @printMatrixResult() {
    int i;
    int j;
    print 30;
    for (i = 0; i < 2; i = i + 1) {
        for (j = 0; j < 2; j = j + 1) {
            print result[i][j];
        }
    }
    return;
}

def @canMultiply(int aCols, int bRows) {
    if (aCols == bRows) {
        print 100; // valid
    }
    else {
        print 101; // invalid
    }
    return;
    for (i = 0; i < 2; i = i + 1) {
        for (j = 0; j < 3; j = j + 1) {
            print matrixA[i][j];
        }
    }
    return;
}

def @printMatrixB() {
    int i;
    int j;
    print 20;
    for (i = 0; i < 3; i = i + 1) {
        for (j = 0; j < 2; j = j + 1) {
            print matrixB[i][j];
        }
    }
    return;
}

def @printMatrixResult() {
    int i;
    int j;
    print 30;
    for (i = 0; i < 2; i = i + 1) {
        for (j = 0; j < 2; j = j + 1) {
            print result[i][j];
        }
    }
    return;
}

def @canMultiply(int aCols, int bRows) {
    if (aCols == bRows) {
        print 100; // valid
    }
    else {
        print 101; // invalid
    }
    return;
}

def @multiplyMatrices() {
    int i;
    int j;
    int k;
    int sum;
    for (i = 0; i < 2; i = i + 1) {
        for (j = 0; j < 2; j = j + 1) {
            sum = 0;
            for (k = 0; k < 3; k = k + 1) {
                sum = sum + matrixA[i][k] * matrixB[k][j];
            }
            result[i][j] = sum;
        }
    }
    return;
}

def @debugMatrixSizes() {
    print rowsA;
}

def @debugMatrixSizes() {
    print rowsA;
    print colsA;
    print rowsB;
    print colsB;
    return;
}

def @main() {
    rowsA = 2;
    colsA = 3;
    rowsB = 3;
    colsB = 2;

    result = @debugMatrixSizes();
    result = @canMultiply(colsA, rowsB);

    result = @initializeMatrixA();
    result = @initializeMatrixB();
    result = @initializeResultMatrix();

    result = @printMatrixA();
    result = @printMatrixB();

    result = @multiplyMatrices();

    result = @printMatrixResult();

    return;
}
